generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model candidate {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String       @db.VarChar(255)
  profile        String       @db.VarChar(255)
  job_posting_id String?      @db.Uuid
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  job_posting    job_posting? @relation(fields: [job_posting_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  referral       referral[]
}

model company {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job_posting job_posting[]
}

model job_posting {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String      @db.VarChar(255)
  description String      @db.VarChar(255)
  company_id  String?     @db.Uuid
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  candidate   candidate[]
  company     company?    @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model referral {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  candidate_id String?    @db.Uuid
  user_id      String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  candidate    candidate? @relation(fields: [candidate_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  company     company[]
  referral    referral[]
}
